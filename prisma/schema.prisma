generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Carregamento {
  id                      String        @id @default(cuid())
  carregamentosId         String
  carregamentos           Carregamentos @relation(fields: [carregamentosId], references: [id])
  referenceName           String
  referenceSize           Int
  referenceScreenText     String
  hasSingleAmount         Boolean?
  singleAmountDescription String?
  hasFreeAmount           Boolean?
  singleAmount            Int?
  maxFreeAmount           Int?
  minFreeAmount           Int?

}

model Carregamentos {
  id               String         @id @default(cuid())
  produtoId        String         @unique
  produto          Produto        @relation(fields: [produtoId], references: [id], onDelete: Cascade)
  carregamentos    Carregamento[]
}

model Entitade {
  id                String     @id @default(cuid())
  utilizadorId      String     @unique
  utilizador        Utilizador @relation(fields: [utilizadorId], references: [id], onDelete: Cascade)
  selectionName     String
  screenName        String
  checkDigit        Boolean    @default(false)
  useLeftZero       Boolean
  validateReference Boolean    @default(false)
  servicos          Servico[]
}

model Pagamento {
  id                  String  @id @default(cuid())
  productId           String  @unique
  Produto             Produto @relation(fields: [productId], references: [id], onDelete: Cascade)
  referenceName       String
  referenceSize       Int
  referenceScreenText String
  isNew               Boolean @default(true)
  maxAmount           Int
  minAmount           Int
}

model Produto {
  id             String         @id @default(cuid())
  serviceId      String
  Servico        Servico        @relation(fields: [serviceId], references: [id], onDelete: Cascade)
  selectionName  String
  screenName     String
  type           ProdutoTipo
  carregamentos  Carregamentos?
  pagamento      Pagamento?
  recargas       Recargas?
}

model Recarga {
  id          String   @id @default(cuid())
  recargasId  String
  recargas    Recargas @relation(fields: [recargasId], references: [id], onDelete: Cascade)
  productId   String
  units       String
  amount      Int
}

model Recargas {
  id          String      @id @default(cuid())
  produtoId   String      @unique
  produto     Produto     @relation(fields: [produtoId], references: [id], onDelete: Cascade)
  recargas    Recarga[]
}

model Servico {
  id              String    @id @default(cuid())
  entitadeId      String
  entitade        Entitade  @relation(fields: [entitadeId], references: [id], onDelete: Cascade)
  systemName      String
  screenName      String
  selectionName_1 String
  selectionName_2 String
  Produto         Produto[]
}

model Utilizador {
  id       String     @id @unique
  email    String?
  picture  String?
  name     String?
  surname  String?
  entitade Entitade?
}

enum ProdutoTipo {
  pagamento
  carregamentos
  recargas
}

enum RealTimeNotificationType {
  E038v03
  E038v04
}
