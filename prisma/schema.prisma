generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Montante {
  id                      String        @id @default(cuid())
  carregamentoId          String
  carregamento            Carregamento  @relation(fields: [carregamentoId], references: [id])
  montante                Float
  descricao               String
}

model Carregamento {
  id                      String        @id @default(cuid())
  produtoId               String        @unique
  produto                 Produto       @relation(fields: [produtoId], references: [id], onDelete: Cascade)
  desig_referencia        String
  tamanho_referencia      Int
  texto_ecra_referencia   String
  montante_tipo           MontanteTipo
  montante_livre          Boolean
  montante_minimo         Float?
  montante_maximo         Float?
  montante_pre_definido   Boolean
  montantes               Montante[]
}

model Empresa {
  id                      String        @id @default(cuid())
  utilizadorId            String        @unique
  utilizador              Utilizador    @relation(fields: [utilizadorId], references: [id], onDelete: Cascade)
  cae                     String
  nome                    String
  numero_pessoa_colectiva String
  sigla                   String
  morada                  String
  localidade              String
  responsavel             String
  telefone                String
  email                   String
  numero_entidade         String
  desig_ecra              String
  desig_tecla_seleccao    String
  servicos                Servico[]
}

model Pagamento {
  id                      String        @id @default(cuid())
  productId               String        @unique
  Produto                 Produto       @relation(fields: [productId], references: [id], onDelete: Cascade)
  desig_referencia        String
  tamanho_referencia      Int
  texto_ecra_referencia   String
  isNew                   Boolean       @default(true)
  montante_minimo         Float
  montante_maximo         Float
}

model Produto {
  id                      String        @id @default(cuid())
  serviceId               String
  servico                 Servico       @relation(fields: [serviceId], references: [id], onDelete: Cascade)
  desig_ecra              String
  desig_tecla_seleccao    String
  type                    ProdutoTipo
  carregamento            Carregamento?
  pagamento               Pagamento?
  recargas                Recargas?
}

model Recarga {
  id                      String        @id @default(cuid())
  recargasId              String
  recargas                Recargas      @relation(fields: [recargasId], references: [id], onDelete: Cascade)
  productId               String
  desig_unidade           String
  desig_montante          Float
}

model Recargas {
  id                      String        @id @default(cuid())
  produtoId               String        @unique
  produto                 Produto       @relation(fields: [produtoId], references: [id], onDelete: Cascade)
  recargas                Recarga[]
}

model Servico {
  id                      String        @id @default(cuid())
  empresaId               String
  empresa                 Empresa       @relation(fields: [empresaId], references: [id], onDelete: Cascade)
  desig_sistema           String
  desig_ecra              String
  desig_tecla_seleccao_1  String
  desig_tecla_seleccao_2  String
  suprimir_produtos       Boolean
  Produto                 Produto[]
}

model Utilizador {
  id                      String        @id @unique
  email                   String?
  picture                 String?
  name                    String?
  surname                 String?
  empresa                 Empresa?
}

enum ProdutoTipo {
  pagamento
  carregamentos
  recargas
}

enum MontanteTipo {
  montante_pre_definido
  montante_livre
  ambos
}

enum RealTimeNotificationType {
  E038v03
  E038v04
}
